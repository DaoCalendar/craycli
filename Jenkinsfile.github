@Library('csm-shared-library') _

def pythonVersion = '3.8'
def isStable = env.TAG_NAME != null ? true : false
pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        disableConcurrentBuilds()
        timeout(time: 20, unit: 'MINUTES')
        timestamps()
    }

    environment {
        GIT_REPO_NAME = getRepoName()
        VERSION = sh(returnStdout: true, script: "git describe --tags | tr -s '-' '~' | tr -d '^v'").trim()
    }

    stages {

        stage('Prepare: RPM') {
            agent {
                docker {
                    image "artifactory.algol60.net/csm-docker/stable/csm-docker-sle-python:${pythonVersion}"
                    reuseNode true
                }
            }
            steps {
                script {
                    runLibraryScript("addRpmMetaData.sh", "${NAME}.spec")
                }
            }
        }

        stage('Build: RPM') {
            agent {
                docker {
                    reuseNode true
                    image "artifactory.algol60.net/csm-docker/stable/csm-docker-sle-python:${pythonVersion}"
                }
            }
            steps {
                sh "make rpm"
            }
        }

        stage('Publish: RPM') {
            steps {
                sh "sudo chown -R jenkins:jenkins $WORKSPACE/dist*/rpmbuild"
                script {
                    publishCsmRpms(os: 'sle-15sp2', component: env.GIT_REPO_NAME, pattern: "dist/rpmbuild/RPMS/x86_64/*.rpm", arch: "x86_64", isStable: isStable)
                    publishCsmRpms(os: 'sle-15sp2', component: env.GIT_REPO_NAME, pattern: "dist/rpmbuild/SRPMS/*.rpm", arch: "src", isStable: isStable)
                    publishCsmRpms(os: 'sle-15sp3', component: env.GIT_REPO_NAME, pattern: "dist/rpmbuild/RPMS/x86_64/*.rpm", arch: "x86_64", isStable: isStable)
                    publishCsmRpms(os: 'sle-15sp3', component: env.GIT_REPO_NAME, pattern: "dist/rpmbuild/SRPMS/*.rpm", arch: "src", isStable: isStable)
                }
            }
        }
    }
}
